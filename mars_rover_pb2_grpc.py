# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import mars_rover_pb2 as mars__rover__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in mars_rover_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class RoverServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DriveForward = channel.unary_unary(
                '/marsrover.RoverService/DriveForward',
                request_serializer=mars__rover__pb2.DriveRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.Reverse = channel.unary_unary(
                '/marsrover.RoverService/Reverse',
                request_serializer=mars__rover__pb2.DriveRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.TurnLeft = channel.unary_unary(
                '/marsrover.RoverService/TurnLeft',
                request_serializer=mars__rover__pb2.TurnRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.TurnRight = channel.unary_unary(
                '/marsrover.RoverService/TurnRight',
                request_serializer=mars__rover__pb2.TurnRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.TurnOnSpot = channel.unary_unary(
                '/marsrover.RoverService/TurnOnSpot',
                request_serializer=mars__rover__pb2.TurnRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.RotatePeriscope = channel.unary_unary(
                '/marsrover.RoverService/RotatePeriscope',
                request_serializer=mars__rover__pb2.RotateRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.ControlHeadlights = channel.unary_unary(
                '/marsrover.RoverService/ControlHeadlights',
                request_serializer=mars__rover__pb2.LEDRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.ControlWheelLEDs = channel.unary_unary(
                '/marsrover.RoverService/ControlWheelLEDs',
                request_serializer=mars__rover__pb2.WheelLEDRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.GetUltrasoundMeasurement = channel.unary_unary(
                '/marsrover.RoverService/GetUltrasoundMeasurement',
                request_serializer=mars__rover__pb2.UltrasoundRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.UltrasoundResponse.FromString,
                _registered_method=True)
        self.GetCameraStream = channel.unary_unary(
                '/marsrover.RoverService/GetCameraStream',
                request_serializer=mars__rover__pb2.CameraStreamRequest.SerializeToString,
                response_deserializer=mars__rover__pb2.CameraStreamResponse.FromString,
                _registered_method=True)


class RoverServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DriveForward(self, request, context):
        """Commands
        Locomotion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reverse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnLeft(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnRight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnOnSpot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RotatePeriscope(self, request, context):
        """POV
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ControlHeadlights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ControlWheelLEDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUltrasoundMeasurement(self, request, context):
        """Measurements
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraStream(self, request, context):
        """Camera
        New service to get the camera stream URL
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoverServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DriveForward': grpc.unary_unary_rpc_method_handler(
                    servicer.DriveForward,
                    request_deserializer=mars__rover__pb2.DriveRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'Reverse': grpc.unary_unary_rpc_method_handler(
                    servicer.Reverse,
                    request_deserializer=mars__rover__pb2.DriveRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'TurnLeft': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnLeft,
                    request_deserializer=mars__rover__pb2.TurnRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'TurnRight': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnRight,
                    request_deserializer=mars__rover__pb2.TurnRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'TurnOnSpot': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnOnSpot,
                    request_deserializer=mars__rover__pb2.TurnRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'RotatePeriscope': grpc.unary_unary_rpc_method_handler(
                    servicer.RotatePeriscope,
                    request_deserializer=mars__rover__pb2.RotateRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'ControlHeadlights': grpc.unary_unary_rpc_method_handler(
                    servicer.ControlHeadlights,
                    request_deserializer=mars__rover__pb2.LEDRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'ControlWheelLEDs': grpc.unary_unary_rpc_method_handler(
                    servicer.ControlWheelLEDs,
                    request_deserializer=mars__rover__pb2.WheelLEDRequest.FromString,
                    response_serializer=mars__rover__pb2.CommandResponse.SerializeToString,
            ),
            'GetUltrasoundMeasurement': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUltrasoundMeasurement,
                    request_deserializer=mars__rover__pb2.UltrasoundRequest.FromString,
                    response_serializer=mars__rover__pb2.UltrasoundResponse.SerializeToString,
            ),
            'GetCameraStream': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraStream,
                    request_deserializer=mars__rover__pb2.CameraStreamRequest.FromString,
                    response_serializer=mars__rover__pb2.CameraStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'marsrover.RoverService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('marsrover.RoverService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RoverService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DriveForward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/DriveForward',
            mars__rover__pb2.DriveRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Reverse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/Reverse',
            mars__rover__pb2.DriveRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TurnLeft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/TurnLeft',
            mars__rover__pb2.TurnRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TurnRight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/TurnRight',
            mars__rover__pb2.TurnRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TurnOnSpot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/TurnOnSpot',
            mars__rover__pb2.TurnRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RotatePeriscope(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/RotatePeriscope',
            mars__rover__pb2.RotateRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ControlHeadlights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/ControlHeadlights',
            mars__rover__pb2.LEDRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ControlWheelLEDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/ControlWheelLEDs',
            mars__rover__pb2.WheelLEDRequest.SerializeToString,
            mars__rover__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUltrasoundMeasurement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/GetUltrasoundMeasurement',
            mars__rover__pb2.UltrasoundRequest.SerializeToString,
            mars__rover__pb2.UltrasoundResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCameraStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/marsrover.RoverService/GetCameraStream',
            mars__rover__pb2.CameraStreamRequest.SerializeToString,
            mars__rover__pb2.CameraStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
